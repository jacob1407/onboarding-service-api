"""remove templates table and associate applications to roles

Revision ID: 33a5e92b4c18
Revises: 10f23970a8f2
Create Date: 2025-04-21 10:15:14.507933

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "33a5e92b4c18"
down_revision: Union[str, None] = "10f23970a8f2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("role_templates")
    op.drop_table("template_applications")
    op.drop_table("templates")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "template_applications",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("template_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["applications.id"],
            name="template_applications_application_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["templates.id"],
            name="template_applications_template_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "application_id", "template_id", name="template_applications_pkey"
        ),
    )
    op.create_table(
        "templates",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("organisation_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["organisations.id"],
            name="templates_organisation_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="templates_pkey"),
        sa.UniqueConstraint("id", name="templates_id_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "role_templates",
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("template_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"], ["roles.id"], name="role_templates_role_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["template_id"], ["templates.id"], name="role_templates_template_id_fkey"
        ),
        sa.PrimaryKeyConstraint("role_id", "template_id", name="role_templates_pkey"),
    )
    # ### end Alembic commands ###
